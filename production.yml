version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  media: {}
  static: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: marketplace_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /gunicorn.sh
    volumes:
      - media:/data/media
      - static:/data/static

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: marketplace_production_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    depends_on:
      - django
    env_file:
      - ./.envs/.production/.nginx
    networks:
      - nginxproxy_net1
      - default
    ports:
      - "0.0.0.0:8001:80"
    volumes:
      - media:/data/media
      - static:/data/static

  redis:
    image: redis:3.2

  celeryworker:
    <<: *django
    image: marketplace_production_celeryworker
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start-celeryworker.sh

  celerybeat:
    <<: *django
    image: marketplace_production_celerybeat
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start-celerybeat.sh

  frontend:
    build:
      context: .
      dockerfile: ./compose/production/frontend/Dockerfile
    env_file:
      - ./.envs/.production/.frontend
    networks:
      - nginxproxy_net1
      - default
    volumes:
      - ./frontend:/app
      - /app/node_modules/
    image: marketplace_local_frontend
    ports:
      - "8002:80"

networks:
  nginxproxy_net1:
    external:
      name: nginxproxy_net1
